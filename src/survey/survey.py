from operator import index

import pandas as pd
# 각 질문에 선택하는 보기에 따라 , 선택된 팀을 포함하는 데이터를 딕셔너리에 담는다.
recommendations = {
    1: {
        '홈런을 많이 치는 팀': ['삼성', '엔씨', '기아'],
        '적시타를 잘 치는 팀': ['SSG', '키움', '두산'],
        '출루율이 높은 팀': ['키움', '엘지', '엔씨']
    },
    2: {
        '2루타를 많이 치는 팀을 선호한다.': ['롯데', '키움', '두산'],
        '3루타를 많이 치는 팀을 선호한다.': ['한화', '엘지', '기아'],
        '홈런: 홈런을 많이 기록하는 팀을 선호한다.': ['삼성', '엔씨', '케이티']
    },
    3: {
        '타율': ['기아', '엘지', '롯데'],
        '장타율': ['케이티', '엔씨', '삼성'],
        '두 지표의 균형': ['한화', '기아', 'SSG']
    },
    4: {
        '희생타와 희생플라이를 자주 활용하는 팀': ['삼성', '케이티', '엔씨'],
        '장타와 타점으로 득점을 하는 팀': ['기아', '엘지', '두산']
    },
    5: {
        '주자 만루 상황에서의 성적이 중요하다.': ['기아', '한화', '롯데'],
        '전체적인 공격 성적이 더 중요하다.': ['케이티', '두산', 'SSG']
    },
    6: {
        '홈런 수가 많은 팀을 선호한다.': ['삼성', '엔씨', '기아'],
        '홈런보다 출루율이 높은 팀을 선호한다.': ['케이티', '엘지', '엔씨'],
        '홈런과 출루율의 적절한 비율을 원하는 팀': ['한화', '키움', 'SSG']
    },
    7: {
        '공격적인 배팅과 대량 득점': ['케이티', '기아', 'KT'],
        '전략적인 배팅과 안정적인 득점': ['두산', '엘지', 'SSG'],
        '상황에 따라 유동적인 전략': ['키움', '엔씨', '한화']
    },
    8: {
        '강력한 타격으로 경기 주도': ['기아', '엘지', '롯데'],
        '세밀한 타격과 볼 배합으로 경기 운영': ['SSG', 'KT', '롯데'],
        '전체적인 팀워크와 협력적인 타격': ['엘지', '두산', 'NC']
    },
    9: {
        '예: 타점이 높은 팀을 선호한다.': ['SSG', '키움', '두산'],
        '아니요: 타점보다는 타율이나 장타율을 더 중요하게 생각한다.': ['케이티', '롯데', '엔씨']
    },
    10: {
        '희생타와 희생플라이를 선호한다.': ['엘지', '두산', '기아'],
        '장타와 타점 중시: 장타와 타점이 높은 팀을 선호한다.': ['케이티', '롯데', '삼성']
    }
}

# 사용자의 선택을 입력받는 함수
def get_recommendations(question_number, choice):
    # recommendations 딕셔너리에서 질문 번호가 유효한지 확인
    if question_number in recommendations:
        # 해당 질문 번호에서 사용자가 선택한 옵션이 유효한지 확인
        if choice in recommendations[question_number]:
            # 유효한 선택인 경우, 해당 선택에 대한 추천 팀 목록 반환
            return recommendations[question_number][choice]
    # 만약 질문 번호 또는 선택이 유효하지 않다면 빈 리스트 반환
    return []

# # 각 질문에 대한 선택지와 추천 팀 출력
# def print_recommendations():
#     # 질문 번호와 각 선택지 설정
#     choices = {
#         1: '홈런을 많이 치는 팀',
#         2: '2루타를 많이 치는 팀을 선호한다.',
#         3: '장타율',
#         4: '희생타와 희생플라이를 자주 활용하는 팀',
#         5: '주자 만루 상황에서의 성적이 중요하다.',
#         6: '홈런 수가 많은 팀을 선호한다.',
#         7: '공격적인 배팅과 대량 득점',
#         8: '강력한 타격으로 경기 주도',
#         9: '예: 타점이 높은 팀을 선호한다.',
#         10: '희생타와 희생플라이를 선호한다.'
#     }
#
#     for question_number, choice in choices.items():
#         recommended_teams = get_recommendations(question_number, choice)
#         print(f"질문 {question_number}: '{choice}' 선택 시 추천 팀: {', '.join(recommended_teams)}")
#
# # 추천 팀을 출력하는 함수 호출
# print_recommendations()

